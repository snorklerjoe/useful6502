MEMORY {
    ZPIO:      start =   $00, size =   $0F, type   = rw, define = yes;
    ZPK:       start =   $10, size =   $C0, type   = rw, define = yes;
    ZP:        start =   $D0, size =   $2F, type   = rw, define = yes;
    RAM:       start =  $200, size = $FE00, define = yes, file = %O, fill = yes;
}

SEGMENTS {
    ZP_PORTS:  load = ZPIO,  type = zp,  define   = yes;
    ZP_KERNEL: load = ZPK,   type = zp,  define   = yes;
    ZEROPAGE:  load = ZP,    type = zp,  define   = yes;
    DATA:      load = RAM,   type = rw,  define   = yes, run = RAM;
    BSS:       load = RAM,   type = bss, define   = yes;
    HEAP:      load = RAM,   type = bss, optional = yes;

    STARTUP:  load = RAM, type = ro;
    ONCE:     load = RAM, type = ro,  optional = yes;
    CODE:     load = RAM, type = ro;
    RODATA:   load = RAM, type = ro;
    VECTORS:  load = RAM, type = ro,  start    = $FFFA;
}

FEATURES {
    CONDES:    segment = STARTUP,
               type    = constructor,
               label   = __CONSTRUCTOR_TABLE__,
               count   = __CONSTRUCTOR_COUNT__;
    CONDES:    segment = STARTUP,
               type    = destructor,
               label   = __DESTRUCTOR_TABLE__,
               count   = __DESTRUCTOR_COUNT__;
}

SYMBOLS {
    # Define the stack size for the application
    __STACKSIZE__:  value = $0200, type = weak;
}
